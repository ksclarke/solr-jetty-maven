=================================================================================
solr-jetty-maven
=================================================================================

A Solr project that runs in a Jetty/Maven context. It's been tested with Maven 3.


=================================================================================
Introduction
=================================================================================

To install, you'll need Git, Java (>= 1.6), and Maven 3 installed. Once those are
installed through your system's package manager, you can get this code using git:
  git clone git://github.com/ksclarke/solr-jetty-maven.git

To start a standalone / master Solr instance, change into the directory and type:
  mvn process-resources jetty:run

To start a slave Solr instance:
  1) Edit the <master.solr.url> element in the pom.xml to point to the master
  2) Then, type: mvn -Denv.type=slave process-resources jetty:run

To use Solr's administrative / dashboard UI, go to: http://localhost:8983/#/

To configure a Solr master or slave instance, look at the configuration in the
project's pom.xml profiles section.  Those values can be overridden in a Maven
settings.xml file found at either:

  $M2_HOME/conf/settings.xml
  ${user.home}/.m2/settings.xml

Note that, currently, running:

  mvn clean

will "clean" (i.e., delete) the Solr workspace (index, snapshots, etc.)


=================================================================================
Running from Init.d/service
=================================================================================

There is a beta Init.d script that will allow the Solr service to be started in a
standard Linux way.  First, check it to ensure that the user who will be running
the service, the location of the service (ie, where you've checkout out the code)
and all the other parameters match your local system... (edit to fit your needs).

After that, you can install it by copying it to the /etc/init.d directory:

  sudo cp etc/init.d/solr /etc/init.d/solr

Then run `update-rc.d` to add the service to the desired system runlevels:

  sudo update-rc.d -f solr start 80 2 3 4 5 . stop 30 0 1 6 .

Once this is done, you should be able to manually start and stop the service:

  sudo service solr start
  sudo service solr status
  sudo service solr stop

You can remove the service from the system's automatic runlevels by typing:

  sudo update-rc.d -f solr remove


=================================================================================
Replication Options
=================================================================================

For a first pass, this is still configured to do replication in the older (>= 1.4
version) style (which uses polling).  With the release of version 4.0, there is a
new method for replication, SolrCloud (which uses pushes).  I will look into this
new method and see what needs to be done to configure it through a Maven POM.

http://wiki.apache.org/solr/SolrReplication
http://wiki.apache.org/solr/SolrCloud


=================================================================================
Contact
=================================================================================

This is a pretty straightforword use of Solr, but if you have questions about it
feel free to contact me, Kevin S. Clarke, at ksclarke@gmail.com
