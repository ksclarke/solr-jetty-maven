#!/bin/bash
#-----------------------------------------------------
# solr-initd v0.0.2
#-----------------------------------------------------
# Script for running solr as a service under initd.
#
# Usage: service solr {start|stop|restart|status}"
#
#-----------------------------------------------------
# Author: Kevin S. Clarke <ksclarke@gmail.com>
# URL: https://github.com/ksclarke/solr-jetty-maven
#
# Improvements to script made by William Hattenhauer
#-----------------------------------------------------
### BEGIN INIT INFO
# Provides: solr
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: init script for solr search
# Description: init script for solr search; should be copied to /etc/init.d
### END INIT INFO


# Things that need to be properly configured at the system level before running:
#   1) That the Java JDK (not just JRE) is installed and that JAVA_HOME is set
#   2) That Maven 3 is installed and that the executable (mvn) is in the PATH

# Configs that might need to be changed to fit your local system's setup
SOLR_HOME="/opt/solr-jetty-maven"

MAVEN_OPTIONS=""
#MAVEN_OPTIONS="-Xmx1024m"

SOLR_OPTIONS=""
#SOLR_OPTIONS="-Denv.type=master"
#SOLR_OPTIONS="-Denv.type=slave"

SOLR_PIDFILE=/var/run/solr.pid
SOLR_LOGFILE=/var/log/solr-console.log

# Find out what Linux distribution we're running under
DISTRIB_ID=`lsb_release -i |awk ' { print $3 }'`

# Give the Web user a shell to run `mvn` from (most don't have this by default)
TMPSHELL="-s /bin/bash"

# Try to correctly set the user who should be used to run the server
if [ "$TRAVIS" == 'true' ] ; then
	SOLR_USER="$USER"
	SOLR_HOME=`pwd`
        SOLR_PIDFILE=solr.pid
        SOLR_LOGFILE=solr-console.log
elif [ "$DISTRIB_ID" == 'RedHatEnterpriseServer' ] \
	|| [ "$DISTRIB_ID" == 'RedHat' ] \
	|| [ "$DISTRIB_ID" == 'Fedora' ] \
	|| [ "$DISTRIB_ID" == 'CentOS' ] ; then
	SOLR_USER="apache"
elif [ "$DISTRIB_ID" == 'Ubuntu' ] \
	|| [ "$DISTRIB_ID" == 'Debian' ] ; then
	SOLR_USER="www-data"
else
	echo "Running Solr as the '$(id -u -n)' user"
	SOLR_USER="$(id -u -n)"
fi

# Find the mvn executable from the system path
MVNCMD=`which mvn`

# Configs that shouldn't need to be changed
SOLR_START_CMD="sudo -u ${SOLR_USER} MAVEN_OPTS=${MAVEN_OPTIONS} $TMPSHELL $MVNCMD ${SOLR_OPTIONS} process-resources jetty:run"
SOLR_STOP_CMD="sudo -u ${SOLR_USER} $MVNCMD -q jetty:stop"

if [[ -z "$MVNCMD" ]]; then
	echo "Can't find Maven's mvn executable" >> $SOLR_LOGFILE && exit 1
fi

# Check if we're running from our own directory
if [ ! -f "${SOLR_HOME}/pom.xml" ]; then
	if [ -f ./pom.xml ]; then
		SOLR_HOME=`pwd`
	else
		echo "Can't find $SOLR_HOME" >> $SOLR_LOGFILE && exit 1
	fi
fi

if [ ! -f "${SOLR_HOME}/src/main/resources/solr/collection1/conf/schema.xml" ]; then
	echo "Missing Solr schema file: ${SOLR_HOME}/src/main/resources/solr/collection1/conf/schema.xml" >> $SOLR_LOGFILE && exit 1
fi

if [ ! -f "${SOLR_HOME}/src/main/resources/solr/collection1/conf/solrconfig.xml" ]; then
	echo "Missing Solr config file: ${SOLR_HOME}/src/main/resources/solr/collection1/conf/solrconfig.xml" >> $SOLR_LOGFILE && exit1
fi

case $1 in
start)
	eval cd ~$SOLR_USER

	if [ ! -f .m2 ]; then
		mkdir -p .m2/repository
		chown -R $SOLR_USER:$SOLR_USER .m2
	fi

	started=false
	cd $SOLR_HOME
	nohup $SOLR_START_CMD > $SOLR_LOGFILE 2>&1 &
	pid=$!
	echo $pid > $SOLR_PIDFILE

	# We remove one line in the below because it contains `ps` labels
	while [ `ps -p$pid -o pid | sed "1 d" | wc -l` != 0 ];
	do
		if grep -q "Started Jetty Server" $SOLR_LOGFILE; then
			started=true
			break
		fi

		sleep 1
	done

	if [ $started == true ]; then
		echo "Solr successfully started"
	else
		wait $pid

		if [[ $? != 0 ]]; then
			echo "Failed to start Solr"
			echo "  Consult the log for more details: $SOLR_LOGFILE"
		fi
	fi
	;;
stop)
	cd $SOLR_HOME
	$SOLR_STOP_CMD
	rm -f $SOLR_PIDFILE
	echo "Solr successfully stopped"
	;;
restart)
	$0 stop
	$0 start
	;;
status)
	if [ -f $SOLR_PIDFILE ]; then
		echo "Solr running"
	else
		echo "Solr stopped"
	fi
	;;
*)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 3
	;;
esac
