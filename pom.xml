<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>info.freelibrary</groupId>
  <artifactId>solr-jetty-maven</artifactId>
  <packaging>maven-plugin</packaging>
  <version>0.0.2-SNAPSHOT</version>
  <name>Solr-Jetty-Maven</name>
  <description>A project template that runs Solr in Jetty using Maven.</description>
  <url>http://projects.freelibrary.info/solr-jetty-maven</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:ksclarke/solr-jetty-maven.git</connection>
    <developerConnection>scm:git:git@github.com:ksclarke/solr-jetty-maven.git</developerConnection>
    <url>git@github.com:ksclarke/solr-jetty-maven.git</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ksclarke/solr-jetty-maven/issues</url>
  </issueManagement>
  <organization>
    <name>FreeLibrary</name>
    <url>http://freelibrary.info</url>
  </organization>
  <developers>
    <developer>
      <email>ksclarke@gmail.com</email>
      <name>Kevin S. Clarke</name>
      <url>http://kevinclarke.info</url>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>America/New_York</timezone>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>William Hattenhauer</name>
      <url>http://www.linkedin.com/in/williamhattenhauer/</url>
      <roles>
        <role>contributor</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </contributor>
  </contributors>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- Default key which should be overridden in a settings.xml file -->
    <jetty.stop.key>cough</jetty.stop.key>
    <!-- Current version of Solr supported by solr-jetty-maven -->
    <solr.version>4.5.1</solr.version>
  </properties>
  <dependencies>
    <!-- Here we can add any custom solr filters, analyzers, etc. -->
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>solr-iso639-filter</artifactId>
      <version>${solr.version}-r20130829</version>
    </dependency>
    <!-- Below here are the required solr jars we need to run solr -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${solr.version}</version>
      <!-- Explicitly include core to exclude hard-coded log4j dep in dep tree -->
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr</artifactId>
      <version>${solr.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-velocity</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <!-- Below here are the dependencies for our Maven mojos -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>3.0.5</version>
      <exclusions>
        <!-- This conflicts with a newer guava in solr; exclude it -->
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>3.0.5</version>
    </dependency>
    <!-- Below are the classes so we can use logback as our logger -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.5</version>
    </dependency>
    <!-- Below are some unrelated libraries include because I find them useful -->
    <dependency>
      <groupId>org.ccil.cowan.tagsoup</groupId>
      <artifactId>tagsoup</artifactId>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>xom</groupId>
      <artifactId>xom</artifactId>
      <version>1.2.5</version>
    </dependency>
    <!-- Below here are testing dependencies -->
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-verifier</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <!-- We copy files over to target and supply configured values in process -->
    <filters>
      <filter>src/main/resources/pom.defaults</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.txt</include>
          <include>**/*.conf</include>
          <include>**/*.xsl</include>
          <include>**/*.vm</include>
          <include>**/*.css</include>
          <include>**/*.js</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <!-- Filter the settings.xml file but not the test projects -->
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>settings.xml</include>
        </includes>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>settings.xml</exclude>
        </excludes>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <plugins>
      <!-- Jetty plugin is how we run solr from within maven -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.0.5.v20130815</version>
        <dependencies>
          <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.13</version>
          </dependency>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.5</version>
          </dependency>
          <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-core</artifactId>
            <version>${solr.version}</version>
            <!-- Explicitly include core to exclude hard-coded log4j dependency -->
            <exclusions>
              <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
              </exclusion>
              <exclusion>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <configuration>
          <webApp>
            <contextPath>/solr</contextPath>
          </webApp>
          <stopKey>${jetty.stop.key}</stopKey>
          <stopPort>8993</stopPort>
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <requestLog implementation="org.eclipse.jetty.server.NCSARequestLog">
            <filename>target/yyyy_mm_dd.request.log</filename>
            <retainDays>30</retainDays>
            <append>true</append>
            <extended>false</extended>
            <logTimeZone>GMT</logTimeZone>
          </requestLog>
        </configuration>
      </plugin>
      <!-- Properties plugin sets system properties for the jetty plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
            <configuration>
              <properties>
                <property>
                  <name>logback.configurationFile</name>
                  <value>src/main/resources/logback.xml</value>
                </property>
                <property>
                  <name>jetty.port</name>
                  <value>8983</value>
                </property>
                <property>
                  <name>solr.solr.home</name>
                  <value>target/classes/solr/</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Plugin plugin allows us to be able to run our Solr mojos -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
          <goalPrefix>solr</goalPrefix>
        </configuration>
        <executions>
          <execution>
            <id>mojo-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Resources plugin is used for copying report files into site directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/site</outputDirectory>
              <resources>
                <resource>
                  <directory>src/site/resources/eclipse</directory>
                </resource>
                <resource>
                  <directory>src/site/resources/checkstyle</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- Move this project's base Solr core to the integration test project -->
          <execution>
            <id>copy-solr-core</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/test-classes/mojo-tests-project/src/main/resources/solr</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/solr</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Compiler plugin sets minimum JDK version: 1.7 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <!-- Site plugin creates a documentation site with reports, etc. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <generateReports>true</generateReports>
          <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
          <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jxr-plugin</artifactId>
              <version>2.3</version>
              <configuration>
                <aggregate>true</aggregate>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>jdepend-maven-plugin</artifactId>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.6</version>
              <configuration>
                <anonymousConnection>scm:git:git@github.com:ksclarke/solr-jetty-maven.git</anonymousConnection>
                <developerConnection>scm:git:git@github.com:ksclarke/solr-jetty-maven.git</developerConnection>
              </configuration>
              <reportSets>
                <reportSet>
                  <reports>
                    <report>summary</report>
                    <report>license</report>
                    <report>modules</report>
                    <report>project-team</report>
                    <report>plugins</report>
                    <report>dependency-info</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.15</version>
              <configuration>
                <forkCount>3</forkCount>
                <reuseForks>true</reuseForks>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-changes-plugin</artifactId>
              <version>2.9</version>
              <reportSets>
                <reportSet>
                  <reports>
                    <report>changes-report</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-changelog-plugin</artifactId>
              <version>2.2</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.9</version>
              <configuration>
                <charset>${project.build.sourceEncoding}</charset>
                <docencoding>${project.build.sourceEncoding}</docencoding>
                <docfilessubdirs>true</docfilessubdirs>
                <links>
                  <link>http://download.oracle.com/javase/7/docs/api/</link>
                </links>
                <notimestamp>true</notimestamp>
                <show>protected</show>
                <source>1.7</source>
                <sourcepath>src/main/java/info/freelibrary</sourcepath>
              </configuration>
              <reportSets>
                <reportSet>
                  <id>default</id>
                  <configuration> </configuration>
                  <reports>
                    <report>javadoc</report>
                  </reports>
                </reportSet>
              </reportSets>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.5.2</version>
              <configuration>
                <!-- Below usually would be a package, but HelpMojo causes probs -->
                <onlyAnalyze>info.freelibrary.maven.CreateSolrCoreMojo,info.freelibrary.maven.CreateSolrCoreMojo$SolrCoreFilter,info.freelibrary.maven.DeleteSolrCoreMojo</onlyAnalyze>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.10</version>
              <configuration>
                <consoleOutput>true</consoleOutput>
                <configLocation>src/site/resources/checkstyle/checkstyle.xml</configLocation>
                <suppressionsLocation>src/site/resources/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-pmd-plugin</artifactId>
              <version>3.0.1</version>
              <configuration>
                <aggregate>true</aggregate>
                <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                <minimumTokens>100</minimumTokens>
                <linkXRef>true</linkXRef>
                <verbose>true</verbose>
                <targetJdk>1.7</targetJdk>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>taglist-maven-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                <tagListOptions>
                  <tagClasses>
                    <tagClass>
                      <displayName>TODOs</displayName>
                      <tags>
                        <tag>
                          <matchString>TODO</matchString>
                          <matchType>exact</matchType>
                        </tag>
                      </tags>
                    </tagClass>
                    <tagClass>
                      <displayName>FIXMEs</displayName>
                      <tags>
                        <tag>
                          <matchString>FIXME</matchString>
                          <matchType>exact</matchType>
                        </tag>
                      </tags>
                    </tagClass>
                  </tagClasses>
                </tagListOptions>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>cobertura-maven-plugin</artifactId>
              <version>2.5.2</version>
              <configuration>
                <aggregate>true</aggregate>
                <outputDirectory>${project.reporting.outputDirectory}/cobertura</outputDirectory>
              </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-module-markdown</artifactId>
            <version>1.3</version>
          </dependency>
          <dependency>
            <groupId>lt.velykis.maven.skins</groupId>
            <artifactId>reflow-velocity-tools</artifactId>
            <version>1.0.0</version>
          </dependency>
          <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Install solr-jetty-maven to the test repository -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.3.1</version>
        <executions>
          <execution>
            <id>install-plugin-for-it</id>
            <goals>
              <goal>install-file</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <file>${project.build.directory}/${project.build.finalName}.jar</file>
              <generatePom>true</generatePom>
              <pomFile>pom.xml</pomFile>
              <packaging>jar</packaging>
              <version>${project.version}</version>
              <localRepositoryPath>${test-repo}</localRepositoryPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy solr-jetty-maven dependencies to the test repository -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-it-dependencies</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-dependencies</goal>
              <!-- There is a go-offline goal but it's broken
                     http://jira.codehaus.org/browse/MDEP-82 -->
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                  <type>${project.packaging}</type>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${test-repo}</outputDirectory>
              <useRepositoryLayout>true</useRepositoryLayout>
              <addParentPoms>true</addParentPoms>
              <copyPom>true</copyPom>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Integration testing of solr-jetty-maven's mojos -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit47</artifactId>
            <version>2.14.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <!-- We don't have any unit tests -->
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <id>surefire-it</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- We do have integration tests -->
              <skip>false</skip>
              <systemPropertyVariables>
                <!-- So we keep test dependencies in sync with this project -->
                <tested.project.version>${project.version}</tested.project.version>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.kuali.maven.wagons</groupId>
        <artifactId>maven-s3-wagon</artifactId>
        <version>1.1.20</version>
      </extension>
    </extensions>
  </build>
  <!-- profiles are how we package canned configurations for solr/jetty -->
  <profiles>
    <!-- default profile is a master/standalone Solr instance -->
    <profile>
      <id>default</id>
      <activation>
        <property>
          <name>!env.type</name>
        </property>
      </activation>
      <properties>
        <enable.master>true</enable.master>
        <commit.reserve.duration>00:00:10</commit.reserve.duration>
        <test-repo>${project.build.directory}/test-classes/test-repo</test-repo>
      </properties>
    </profile>
    <!-- this covers the case of wanting to specify env.type -->
    <profile>
      <id>master</id>
      <activation>
        <property>
          <name>env.type</name>
          <value>master</value>
        </property>
      </activation>
      <properties>
        <enable.master>true</enable.master>
        <commit.reserve.duration>00:00:10</commit.reserve.duration>
      </properties>
    </profile>
    <!-- if you have a master, you'll probably want read-only slaves -->
    <profile>
      <id>slave</id>
      <activation>
        <property>
          <name>env.type</name>
          <value>slave</value>
        </property>
      </activation>
      <properties>
        <enable.slave>true</enable.slave>
        <poll.interval>00:00:20</poll.interval>
        <master.solr.url>http://localhost:8983/solr/${solr.core.name}</master.solr.url>

        <!-- If using HTTP auth on master to prevent unauthorized updates -->
        <master.solr.httpauth.u>username</master.solr.httpauth.u>
        <master.solr.httpauth.pw>password</master.solr.httpauth.pw>

        <max.number.of.backups>1</max.number.of.backups>
      </properties>
    </profile>
    <!-- this profile is just for releasing new versions of this project -->
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <!-- we copy site documentation up to s3 so its available to everyone -->
  <distributionManagement>
    <site>
      <id>s3.site</id>
      <url>s3://projects.freelibrary.info/solr-jetty-maven</url>
    </site>
  </distributionManagement>
  <!-- we publish new versions of this project through sonatype -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>
</project>
